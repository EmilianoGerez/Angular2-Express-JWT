{"version":3,"sources":["user/components/partials/profile-data.component.ts"],"names":[],"mappings":"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","file":"profile-data.component.js","sourcesContent":["import {Component, Input} from \"@angular/core\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {Validators, FormBuilder, ControlGroup, FORM_DIRECTIVES} from \"@angular/common\";\r\nimport {UserValidators} from \"../../classes/user.validators\";\r\nimport {User} from \"../../models/user.model\";\r\n\r\n@Component({\r\n  selector: 'user-data',\r\n  templateUrl: './app/user/templates/profile-data.template.html',\r\n  directives: [FORM_DIRECTIVES]\r\n})\r\n\r\nexport class ProfileDataComponent {\r\n  @Input() currentUser:User;\r\n  userData:User = new User();\r\n  updateNameForm:ControlGroup;\r\n  updatePassForm:ControlGroup;\r\n  nameEdit:boolean = false;\r\n  passEdit:boolean = false;\r\n  errorMsg:any;\r\n  successMsg:any;\r\n\r\n  constructor(fb:FormBuilder,\r\n              private _userService:UserService) {\r\n\r\n    this.updateNameForm = fb.group({\r\n      firstName: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3)\r\n      ])],\r\n      lastName: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3)\r\n      ])]\r\n    });\r\n\r\n    this.updatePassForm = fb.group({\r\n      oldPassword: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.maxLength(15)\r\n      ])],\r\n      password: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.maxLength(15)\r\n      ])],\r\n      repassword: ['', Validators.required]\r\n    }, {validator: UserValidators.passwordMatch});\r\n  }\r\n\r\n  update() {\r\n    this._userService.update(this.userData)\r\n      .subscribe(\r\n        res => {\r\n          this.nameEdit = false;\r\n          this.passEdit = false;\r\n          this.setSuccess(res);\r\n        },\r\n        err => this.setError(err));\r\n  }\r\n\r\n  private setError(err:any) {\r\n    let errResponse = err.json();\r\n    switch (errResponse.error) {\r\n      case 'currentPassword':\r\n        this.errorMsg = {\r\n          head: 'Invalid current password!!',\r\n          msg: 'please verify this.'\r\n        };\r\n        break;\r\n      default:\r\n        this.errorMsg = {\r\n          head: 'Oops!!',\r\n          msg: 'something went wrong.'\r\n        };\r\n    }\r\n  }\r\n\r\n  private setSuccess(res:any) {\r\n    switch (res.type) {\r\n      case 'passChanged':\r\n        this.successMsg = {\r\n          head: 'Password changed successfully!!',\r\n          msg: 'remember to use this in the next login.'\r\n        };\r\n        break;\r\n      default:\r\n        this.successMsg = {\r\n          head: 'User updated!!',\r\n          msg: 'all is ok.'\r\n        };\r\n    }\r\n  }\r\n}\r\n"]}