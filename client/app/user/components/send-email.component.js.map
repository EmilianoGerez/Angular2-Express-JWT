{"version":3,"sources":["user/components/send-email.component.ts"],"names":[],"mappings":"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","file":"send-email.component.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, ControlGroup, Validators, FORM_DIRECTIVES} from '@angular/common';\r\nimport {ROUTER_DIRECTIVES, Router} from '@angular/router-deprecated';\r\nimport {AuthService} from \"../services/auth.service\";\r\nimport {UserValidators} from \"../classes/user.validators\";\r\n\r\n@Component({\r\n  selector: 'sendEmail-form',\r\n  templateUrl: './app/user/templates/send-email.template.html',\r\n  directives: [FORM_DIRECTIVES, ROUTER_DIRECTIVES],\r\n  providers: [AuthService]\r\n})\r\n\r\nexport class SendEmailComponent implements OnInit {\r\n  sendEmailForm:ControlGroup;\r\n  isForgot:boolean = false;\r\n  errorMsg:any;\r\n  isSent:boolean = false;\r\n  sending:boolean = false;\r\n  processName:string;\r\n  formTitle:string;\r\n\r\n  constructor(fb:FormBuilder,\r\n              private _authService:AuthService,\r\n              private _router:Router) {\r\n\r\n    this.sendEmailForm = fb.group({\r\n      email: ['', Validators.compose([\r\n        Validators.required,\r\n        UserValidators.validEmail\r\n      ])]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isForgot = this._router.root.currentInstruction.component.routeName === 'Forgot';\r\n    this.formTitle = (this.isForgot) ? 'Reset your password' : 'Send activation account email';\r\n    this.processName = (this.isForgot) ? 'reset password' : 'activation account';\r\n  }\r\n\r\n  onSubmit(formValue:any) {\r\n    this.errorMsg = false;\r\n    this.sending = true;\r\n    (this.isForgot) ? this.sendReset(formValue) : this.sendActivation(formValue);\r\n  }\r\n\r\n  private sendActivation(formValue:any) {\r\n    this._authService.sendActivation(formValue)\r\n      .subscribe(\r\n        res => {\r\n          this.isSent = true;\r\n          this.sending = false;\r\n        },\r\n        err => {\r\n          this.setErrorMsg(err);\r\n        });\r\n  }\r\n\r\n  private sendReset(formValue:any) {\r\n    this._authService.forgot(formValue)\r\n      .subscribe(\r\n        res => {\r\n          this.isSent = true;\r\n          this.sending = false;\r\n        },\r\n        err => {\r\n          this.setErrorMsg(err);\r\n        });\r\n  }\r\n\r\n  private setErrorMsg(err:any) {\r\n    let errResponse = err.json();\r\n    this.sending = false;\r\n\r\n    switch (errResponse.error) {\r\n      case 'invalidEmail':\r\n        this.errorMsg = {\r\n          head: 'Invalid Email!!',\r\n          msg: 'please verify your input email.'\r\n        };\r\n        break;\r\n      case 'sending':\r\n        this.errorMsg = {\r\n          head: 'Error Sending!!',\r\n          msg: 'please try again'\r\n        };\r\n        break;\r\n      default:\r\n        this.errorMsg = {\r\n          head: 'Oops!!',\r\n          msg: 'something went wrong.'\r\n        };\r\n    }\r\n  }\r\n}\r\n"]}