{"version":3,"sources":["user/components/login-form.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwB,eAAe,CAAC,CAAA;AACxC,uBAAqE,iBAAiB,CAAC,CAAA;AACvF,kCAAwC,4BAA4B,CAAC,CAAA;AACrE,gCAA6B,4BAA4B,CAAC,CAAA;AAC1D,6BAA0B,0BAA0B,CAAC,CAAA;AACrD,6BAA0B,0BAA0B,CAAC,CAAA;AACrD,sCAAkC,mCAAmC,CAAC,CAAA;AAUtE;IAKE,4BAAY,EAAc,EACN,YAAwB,EACxB,YAAwB,EACxB,aAAiC,EACjC,MAAa;QAHb,iBAAY,GAAZ,YAAY,CAAY;QACxB,iBAAY,GAAZ,YAAY,CAAY;QACxB,kBAAa,GAAb,aAAa,CAAoB;QACjC,WAAM,GAAN,MAAM,CAAO;QAE/B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC;YACxB,KAAK,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,OAAO,CAAC;oBAC7B,mBAAU,CAAC,QAAQ;oBACnB,gCAAc,CAAC,UAAU;iBAC1B,CAAC,CAAC;YACH,QAAQ,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,OAAO,CAAC;oBAChC,mBAAU,CAAC,QAAQ;oBACnB,mBAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,mBAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC;IAED,qCAAQ,GAAR,UAAS,WAAe;QAAxB,iBAmBC;QAlBC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC,SAAS,CACR,UAAC,GAAG;YACF,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACpB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YAC5C,KAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YACvC,KAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,EACD,UAAA,GAAG;YACD,IAAI,WAAW,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YAC7B,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAE3B,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC,CAAC;gBACvC,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC9B,CAAC;QACH,CAAC,CACF,CAAC;IACN,CAAC;IAEO,qCAAQ,GAAhB,UAAiB,WAAe;QAE9B,MAAM,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,KAAK,aAAa;gBAChB,IAAI,CAAC,QAAQ,GAAG;oBACd,IAAI,EAAE,6BAA6B;oBACnC,GAAG,EAAE,sBAAsB;iBAC5B,CAAC;gBACF,KAAK,CAAC;YACR;gBACE,IAAI,CAAC,QAAQ,GAAG;oBACd,IAAI,EAAE,QAAQ;oBACd,GAAG,EAAE,uBAAuB;iBAC7B,CAAC;QACN,CAAC;IACH,CAAC;IAnEH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,UAAU,EAAE,CAAC,wBAAe,EAAE,qCAAiB,CAAC;YAChD,WAAW,EAAE,+CAA+C;YAC5D,SAAS,EAAE,CAAC,0BAAW,CAAC;SACzB,CAAC;;0BAAA;IAgEF,yBAAC;AAAD,CA9DA,AA8DC,IAAA;AA9DY,0BAAkB,qBA8D9B,CAAA","file":"login-form.component.js","sourcesContent":["import {Component} from \"@angular/core\";\r\nimport {FormBuilder, ControlGroup, Validators, FORM_DIRECTIVES} from \"@angular/common\";\r\nimport {Router, ROUTER_DIRECTIVES} from '@angular/router-deprecated';\r\nimport {UserValidators} from \"../classes/user.validators\";\r\nimport {AuthService} from \"../services/auth.service\";\r\nimport {UserService} from \"../services/user.service\";\r\nimport {RefreshTokenService} from \"../services/refresh-token.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'login-form',\r\n  directives: [FORM_DIRECTIVES, ROUTER_DIRECTIVES],\r\n  templateUrl: './app/user/templates/login-form.template.html',\r\n  providers: [AuthService]\r\n})\r\n\r\nexport class LoginFormComponent {\r\n  loginForm:ControlGroup;\r\n  errorMsg:any;\r\n  needsActivation:boolean;\r\n\r\n  constructor(fb:FormBuilder,\r\n              private _authService:AuthService,\r\n              private _userService:UserService,\r\n              private _refreshToken:RefreshTokenService,\r\n              private router:Router) {\r\n\r\n    this.loginForm = fb.group({\r\n      email: [\"\", Validators.compose([\r\n        Validators.required,\r\n        UserValidators.validEmail\r\n      ])],\r\n      password: [\"\", Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        Validators.maxLength(15)\r\n      ])]\r\n    });\r\n  }\r\n\r\n  onSubmit(credentials:any) {\r\n    this._authService.login(credentials)\r\n      .subscribe(\r\n        (res) => {\r\n          let user = res.user;\r\n          localStorage.setItem('id_token', res.token);\r\n          this._userService.setCurrentUser(user);\r\n          this._refreshToken.scheduleRefresh();\r\n          this.router.navigateByUrl('/home');\r\n        },\r\n        err => {\r\n          let errResponse = err.json();\r\n          this.setError(errResponse);\r\n\r\n          if (errResponse.error === 'activation') {\r\n            this.needsActivation = true;\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  private setError(errResponse:any) {\r\n\r\n    switch (errResponse.error) {\r\n      case 'credentials':\r\n        this.errorMsg = {\r\n          head: 'Invalid email or password!!',\r\n          msg: 'please verify these.'\r\n        };\r\n        break;\r\n      default:\r\n        this.errorMsg = {\r\n          head: 'Oops!!',\r\n          msg: 'something went wrong.'\r\n        };\r\n    }\r\n  }\r\n\r\n}\r\n"]}