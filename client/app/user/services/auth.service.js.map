{"version":3,"sources":["user/services/auth.service.ts"],"names":[],"mappings":"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","file":"auth.service.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {Http, Headers} from \"@angular/http\";\r\nimport {JwtHelper, AuthHttp} from \"angular2-jwt\";\r\nimport 'rxjs/add/operator/map';\r\nimport {UserService} from \"./user.service\";\r\n\r\n\r\n@Injectable()\r\n\r\nexport class AuthService {\r\n  private baseUrl = 'http://localhost:3000/api/auth/';\r\n  private _headers:Headers = new Headers();\r\n  _jwtHelper:JwtHelper = new JwtHelper();\r\n\r\n  constructor(private _http:Http,\r\n              private _authHttp:AuthHttp,\r\n              private _userService:UserService) {\r\n    this._headers.append('Content-Type', 'application/json');\r\n  }\r\n\r\n  // Auth methods\r\n  //////////////////////\r\n\r\n  login(credentials:any) {\r\n    return this._http\r\n      .post(this.getUrl('login'), JSON.stringify(credentials), {headers: this._headers})\r\n      .map(res => res.json());\r\n  }\r\n\r\n  activate(code:any) {\r\n    return this._http\r\n      .post(this.getUrl('activation'), JSON.stringify(code), {headers: this._headers})\r\n      .map(res => res.json());\r\n  }\r\n\r\n  sendActivation(email:any) {\r\n    return this._http\r\n      .post(this.getUrl('sendactivation'), JSON.stringify(email), {headers: this._headers})\r\n      .map(res => res.json());\r\n  }\r\n\r\n  logout() {\r\n    let id = this._userService.getCurrentUser()._id;\r\n\r\n    this._authHttp.get(this.getUrl('logout/' + id + '/null'))\r\n      .subscribe(() => {\r\n        localStorage.removeItem('id_token');\r\n        localStorage.removeItem('currentUser');\r\n      });\r\n  }\r\n\r\n  closeSession(sessionId:string) {\r\n    let userId = this._userService.getCurrentUser()._id;\r\n    return this._authHttp\r\n      .get(this.getUrl('logout/' + userId + '/' + sessionId))\r\n      .map(res => res.json());\r\n  }\r\n\r\n  forgot(email:any) {\r\n    return this._http\r\n      .post(this.getUrl('forgot'), JSON.stringify(email), {headers: this._headers})\r\n      .map(res => res.json());\r\n  }\r\n\r\n  resetPassword(reset:any) {\r\n    return this._http\r\n      .post(this.getUrl('reset'), JSON.stringify(reset), {headers: this._headers})\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // Helpers methods\r\n  ////////////////////////\r\n\r\n  isLoggedIn() {\r\n    let token = localStorage.getItem('id_token');\r\n    if (!token) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getUrl(path:string) {\r\n    return this.baseUrl + path;\r\n  }\r\n\r\n  getTokenData() {\r\n    let token = localStorage.getItem('id_token');\r\n    if (!token) {\r\n      return;\r\n    }\r\n    return this._jwtHelper.decodeToken(token);\r\n  }\r\n}\r\n"]}